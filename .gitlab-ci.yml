stages:
  - test
  - build
  - deploy


services:
  - docker:dind


# Run flake8 to check for code quality
lint-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - pip install flake8
    - flake8 bangerz


build-fastapi-service-image:
  stage: build
  image: docker:git
  variables:
    GITLAB_IMAGE: ${CI_REGISTRY_IMAGE}/bangerz_image
  before_script:
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token registry.gitlab.com --password-stdin
  script:
    - docker build --tag $GITLAB_IMAGE:latest bangerz
    - docker push $GITLAB_IMAGE:latest
  only:
    - main


build-front-end-job:
  stage: build
  image: node:lts-bullseye
  needs:
    - lint-test-job
  variables:
    # If either of these variables is defined in the GitLab
    # CI/CD variables, that value will override the value here.
    # You need to substitute in your real values for
    # GROUP_NAME, PROJECT_NAME, & WEBSERVICE_NAME below.
    PUBLIC_URL: https://bangerz-only.gitlab.io/bangerz-only
    REACT_APP_SAMPLE_SERVICE_API_HOST: https://feb-23-pt-8-fastapi.mod3projects.com
  script:
    - cd ghi
    - npm install
    - npm run build
    - cp build/index.html build/404.html
  artifacts:
    paths:
      - ghi/build/

# Deploy the React/JavaScript front-end to GitLab pages
pages:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  dependencies:
    - build-front-end-job
  needs:
    - build-front-end-job
  script:
    - mv ghi/build/ public
  artifacts:
    paths:
      - public


# # Run the unit tests
api-unit-tests-job:
  image: python:3-bullseye
  stage: test
  needs:
    - lint-test-job
  variables:
    DATABASE_URL: postgresql://bangerz:bangerz@db/bangerz
    SIGNING_KEY: 6gYA0hf8n5YlmuoklG1SD8ixEuCsCTyn
  script:
    - cd bangerz
    - pip install -r requirements.txt
    - python -m pytest
